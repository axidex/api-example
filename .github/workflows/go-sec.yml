name: Reusable Go Security Workflow

on:
  workflow_call:
    inputs:
      service_dir:
        required: true
        type: string
  workflow_dispatch:

jobs:
  sast:
    name: SAST (gosec)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.service_dir }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: ${{ inputs.service_dir }}/go.mod
          cache-dependency-path: ${{ inputs.service_dir }}

      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run gosec
        run: gosec ./...

  sca:
    name: SCA (govulncheck)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.service_dir }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: ${{ inputs.service_dir }}/go.mod
          cache-dependency-path: ${{ inputs.service_dir }}

      - name: Run govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest && govulncheck -show verbose ./...

  scan:
    name: Secret Scanning (gitleaks)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_NOTIFY_USER_LIST: "@axidex"