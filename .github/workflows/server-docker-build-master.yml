name: Build Go Server Docker Image Master

on:
  push:
    branches:
      - master
    tags:
      - '*'

  pull_request:
    branches:
      - main
      - 'feature/**'

jobs:
  build-server:
    runs-on: ubuntu-latest
    needs:
      - lint
      - unit-tests
    defaults:
      run:
        working-directory: server

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: git fetch --tags

      - name: Lint Go code
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          working-directory: server
          args: --timeout=5m

      - name: Compute build arguments
        id: build-vars
        run: |
          echo "BUILD_DATE=$(date -u +'%d.%m.%Y')" >> $GITHUB_OUTPUT
          echo "BUILD_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "latest")
          echo "BUILD_VERSION=$TAG" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/api-example-server:latest
            ${{ secrets.DOCKER_USERNAME }}/api-example-server:${{ steps.build-vars.outputs.BUILD_VERSION }}
          build-args: |
            BUILD_VERSION=${{ steps.build-vars.outputs.BUILD_VERSION }}
            BUILD_DATE=${{ steps.build-vars.outputs.BUILD_DATE }}
            BUILD_COMMIT=${{ steps.build-vars.outputs.BUILD_COMMIT }}


  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: server/go.mod

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run unit tests
        run: go test -v ./...

  lint:
    name: Lint Go Code
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: server/go.mod

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache golangci-lint
        uses: actions/cache@v4
        with:
          path: ~/.cache/golangci-lint
          key: ${{ runner.os }}-golangci-${{ hashFiles('server/.golangci.yml') }}
          restore-keys: |
            ${{ runner.os }}-golangci-

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          working-directory: server
          args: --timeout=5m